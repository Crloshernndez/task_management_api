services:
  app:
    build: .
    container_name: ${API_CONTAINER_NAME}
    ports:
      - "${API_PORT:-8000}:8000"
    env_file:
      - .env
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-db}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - task_management_network
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ${POSTGRES_CONTAINER_NAME:-db}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - task_management_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-db}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  task_management_network:
    driver: bridge